<!-- livebook:{"persist_outputs":true} -->

# Advent of Code 2023 Day 1

```elixir
Mix.install([
  {:kino_aoc, "~> 0.1.5"}
])
```

## Day 1

<!-- livebook:{"branch_parent_index":0} -->

## Part 1

<!-- livebook:{"attrs":{"assign_to":"puzzle_input","day":"1","session_secret":"AOC_SESSION","year":"2023"},"chunks":null,"kind":"Elixir.KinoAOC.HelperCell","livebook_object":"smart_cell"} -->

```elixir
{:ok, puzzle_input} =
  KinoAOC.download_puzzle("2023", "1", System.fetch_env!("LB_AOC_SESSION"))
```

<!-- livebook:{"output":true} -->

```
{:ok,
 "eightqrssm9httwogqshfxninepnfrppfzhsc\none111jxlmc7tvklrmhdpsix\nbptwone4sixzzppg\nninezfzseveneight5kjrjvtfjqt5nineone\n58kk\n5b32\n1dtwo\nsix7two7sixtwo78\nmvhsixpptztjh13sixthree2\nsix1bqqvrxndt\nfourmk5grmqone944nbvtj\ntwofiveqxfivezpkvfvxt5eightjhnpl\nfpfqp7three7\nscmlf76ninegjzjkj97two\nfivetkhfnnx22\nsevenxvbcbsvxr7eighttwo\n1hvhqqmrs1bgttshthg6\n4bvnccbdh4onefztdrpq62vvbnvpxxvgrngnfjgfk\n653spgrvd\nsixctlhkjmmxh2fourfivenine37\n229mjp3txmqsxxqdbnnnbrtrcctgzseven\njfourdbpcjc39bhglgnine\nbvnltxdmsp7twoxzpdjdvkxeight4twothree\njlvcdrkhzh8seven3\n418oneeight\n53flcrlvqdeight84frmdcsixchcbc\n114sixone1eight2\nxrbtzbklqsl11\nbhfhszrhzgrhsfd2threeseventwosevenoneseven\nfour9one\n5p\ntwovhjpdxmcxshnhv5vs\nqkkqeightcxcltnn7one9pmhlmvsxnine\n4cbptmvp1\n84xgm\nbzsmqhkrdtdmhhjgrjsdfour1ninetwo61\nonetwoeightgflhlgksevennine7two6\nmbjhkhfour6\n8cvqk6eightonethree1\nqhbllbnlkr3rcsmjvztgd\n18eight4\nhhc6onegvkgkqs5mvsone\n66bnfj\none99xvrhninefive\neight96nxcjjddmseightxvgsixfiverrzpvmgnl\nrpgpczdsxpjgql39\n855dnthhxld6eight\nfour29twosspz1\nsixfiveqvrbcdr9fourlrkpkmxphlsbone\n341\nmhqjjg9six9nine\n7pvjctsgvsix64\n75twotwothreegcvssgbvhpzcnbgteight\n7keight8eight\n52threerhfmklssxcptmnlr4hqc4\nxndfqvgxn3five\n974lknineseven\nrlnsix3\n771m1\nxvtjhq7six64threeeightgspmxgv\n4sbqdxbmmzj6fiveone\nonesvvch4rvhmvncnk\nmkzsftp69six6\nfiveptnn7\n94lsgsjxrrghxxsr4\n1grnvgpeightjthqmrfnszpfhfninefive9mbtf\nqtsdfour2\n5mfhmskpcvqbxjzzxt4lq3sevenkv\nrbhjk1cdzjhtzkcbtvmfm\nnine4eightpmrptkb\nbfiveeight1lxzkzvbtkkgxxs38\nmxcgbjqvhd1sevensevenrgp7two\nfourxrdzzmjfmtr62one\nsevenppqtlhvtwo7phlrbssxb\ndhbnjmxg3bsgbhmlfiveseventwo\ntwoonemrbftgtzeightqjmjctmq55\nggk2lt586dfzqbjsvj1one\njtgpzjjtwo86seventwo\n37nine4onebqvsnmvg277\nhmpnzmqsfour6\nxzfhgzllmcbc56vpbpbbjffmgr3jrc\n5lclone\nhjbvkdtmrgvpfive9sevenfive1nlzqlkfrg\nhtwonetgxvjdkrvjsfjjbfmcthseven29\nsix89bdlssd\n3eight6one\nvtbsix2twolzrhfr1\nvhdcvtj5\n167nsnmgxhtvn54fivedcbgrhm\n4three1five82four\n15eightonethreesixthree\ndvhtsccljt51\npbnfrxblk3sevenxjcmcvhlgrghpbgdnpl8xsr3fiveoneightq\n242three8\n2fivehgqfxgl8kpdknxhmk5bmmsbz\nfivejvjeight6fsqgtpvcb\n1threelgkbhlhhlmrbvxqqgf\nklmqfgfg1gnine253psn8\n47eight\neight83mvdtsqppjhgjnsvngfive\n7mcmzvsv6seven\n56seven98three4three\npfnbthreegthreefknjm4five\n2nqgrdcshfpjfpqdrvnq1twoccpmxpxvv\nxtwo7threemxbtpsvjkgrfivethree2\n9pkdfourfour1zjvczkhpbj\n1three2\npkkbphkgqfivellrnvnkdxpql3\nppc62\none73ptfxsbbpqqgctdjhzjsjc91\nnine7threefourvvk\nsix59542xcxqcbnrvzfbshcxxddz2\nftsfj2ninesix1hdjsrpkonelklfpltv\nninehmxgkqbmhvtlvdmdtvpeighttqfour1three\nfrbnineeight4168ksmjstpqvzhnn\nrgnrntwohvqhgxxfkonefour4mfdr5ftgtjjv\n3ninejbszdvdgznfourxpcxspqxnthlngkncvnineccq\nthreemjglxtp5cqmtwotwo2seventwonerkl\neightsevensevenlmbjzprggthree1eight\n57nineninezdcf\ncqoneighteightjnrfkplvninefivemck18mnhszhkv4\ntbvdcsjsvmxtshv3fourseven4kmxvvfour9\nbxcsix19six8dnqsbx\n7five81ncchkdk\nfour4ck7rtjmjpccpeightone\nfivetwo6nine1tdczktmfninelrbnnine\nonetwo9twoeight5sevensix\ncvvtbmninebneightsix1dnnfkgmnm\nh7three3\ntpnzsdm9sixtg5sixqvcqsq3\n1sevenzmbcpgtfrjvq\nr8757\nfournineseven6fourfour\n798dpbrkfourtwoxdrgqkrkmfeight7\nthreebvqqjcldjx4nine5\n3hbl\ntwodndcfddkvfivermvkrfzsnqthree5\nmhdcvsixmnqlvmvxmxfour3ct\n25dpfsrbcllhtwothree2pthreezfhjx\ndcfggnine1onetwoone\nvtbmbpgffive2hdmzjzqqqc4one\nzg11\ntxrknhvhbv183\ndlvscqszz82nvtpb7tktvtgjbml\ntwofour5sevensmqfjrjcndmvcvqdfsrsix\n446sixeight6rbrltdzf\n132ncq1\n4ninezdfzgvzf4four7qkzstcq\n7rx5xntgxfpmvsevenzmzmbjlc3fivefive\nthreeseven7tshthree\ngnbqhninecjnhlpcfivenine18\ngjntwonenllmzgqsvq36lc45fourdrtzlctr\n3tqgbfrk\nzldl3zxpfbpveight\n2ninetgppcvqrq\n7one1sixeighttxcnhltwooneeight\nbsm3hslqcr8xslndqnnvfpzvprlkt\nkhvptwo7kkbznndpqsevensevenvlr\nsevenscneight8one4qnkc\n2v\n2threerjnineonev\n68qhknonebtxvmqh\n3btb\nkcxbqzbjqt3twofourfxdlprsxkzlmflbveight\n9bmdcninecjdv7\nceightwoninelkbbfxgsv9fb5n\nztwo2\n7four9cpkclqxtrmpdgzxgtwo\n8dghrmgprdjeight8knnb852one\n2three36eightfournone2\n6ztwofkzlhvjdrxtsmlbgczf\nknine6ninebpmzjbkg9tttkhtgcklbfive\nsevenv3\n411one4483\n88jvjggxqfour3zrbvbxjzmthree\nfivelqcnqfvgp18t\nfivejceightqlsdrmrnbzfbjskstzrllxrdlcxpjkvf1\n832\nsixfive77rhkjdhvbpdfjxpkmfdq66qqtfpfs\nfv6svkbnsgtpznblnvkvk5\nsixsevenfoursixeight486\ngsbfrjpngshpmlxf2\ngbmmmvdhffbbcq3\n5fivehxx28" <> ...}
```

```elixir
# The newly-improved calibration document consists of lines of text; 
# each line originally contained a specific calibration value that the Elves now need to recover. 
# On each line, the calibration value can be found by combining the first digit and the last digit
#  (in that order) to form a single two-digit number.

defmodule Day1 do
  def run(input) do
    input
    |> String.split("\n")
    |> Stream.map(&extract_digits/1)
    |> Stream.map(&pick_first_and_last/1)
    |> Enum.sum()
  end

  defp extract_digits(str) do
    extract_digits(str, [])
  end

  defp extract_digits(<<>>, acc), do: Enum.reverse(acc)

  defp extract_digits(<<char, rest::binary>>, acc) when char in ~c"0123456789" do
    extract_digits(rest, [char | acc])
  end

  defp extract_digits(<<_char, rest::binary>>, acc), do: extract_digits(rest, acc)

  defp pick_first_and_last(charlist) do
    first = List.first(charlist)
    last = List.last(charlist)

    String.to_integer(<<first, last>>)
  end
end

Day1.run(puzzle_input)
```

<!-- livebook:{"output":true} -->

```
54159
```

<!-- livebook:{"branch_parent_index":0} -->

## Part 2

<!-- livebook:{"attrs":{"assign_to":"puzzle_input2","day":"1","session_secret":"AOC_SESSION","year":"2023"},"chunks":null,"kind":"Elixir.KinoAOC.HelperCell","livebook_object":"smart_cell"} -->

```elixir
{:ok, puzzle_input2} =
  KinoAOC.download_puzzle("2023", "1", System.fetch_env!("LB_AOC_SESSION"))
```

<!-- livebook:{"output":true} -->

```
{:ok,
 "eightqrssm9httwogqshfxninepnfrppfzhsc\none111jxlmc7tvklrmhdpsix\nbptwone4sixzzppg\nninezfzseveneight5kjrjvtfjqt5nineone\n58kk\n5b32\n1dtwo\nsix7two7sixtwo78\nmvhsixpptztjh13sixthree2\nsix1bqqvrxndt\nfourmk5grmqone944nbvtj\ntwofiveqxfivezpkvfvxt5eightjhnpl\nfpfqp7three7\nscmlf76ninegjzjkj97two\nfivetkhfnnx22\nsevenxvbcbsvxr7eighttwo\n1hvhqqmrs1bgttshthg6\n4bvnccbdh4onefztdrpq62vvbnvpxxvgrngnfjgfk\n653spgrvd\nsixctlhkjmmxh2fourfivenine37\n229mjp3txmqsxxqdbnnnbrtrcctgzseven\njfourdbpcjc39bhglgnine\nbvnltxdmsp7twoxzpdjdvkxeight4twothree\njlvcdrkhzh8seven3\n418oneeight\n53flcrlvqdeight84frmdcsixchcbc\n114sixone1eight2\nxrbtzbklqsl11\nbhfhszrhzgrhsfd2threeseventwosevenoneseven\nfour9one\n5p\ntwovhjpdxmcxshnhv5vs\nqkkqeightcxcltnn7one9pmhlmvsxnine\n4cbptmvp1\n84xgm\nbzsmqhkrdtdmhhjgrjsdfour1ninetwo61\nonetwoeightgflhlgksevennine7two6\nmbjhkhfour6\n8cvqk6eightonethree1\nqhbllbnlkr3rcsmjvztgd\n18eight4\nhhc6onegvkgkqs5mvsone\n66bnfj\none99xvrhninefive\neight96nxcjjddmseightxvgsixfiverrzpvmgnl\nrpgpczdsxpjgql39\n855dnthhxld6eight\nfour29twosspz1\nsixfiveqvrbcdr9fourlrkpkmxphlsbone\n341\nmhqjjg9six9nine\n7pvjctsgvsix64\n75twotwothreegcvssgbvhpzcnbgteight\n7keight8eight\n52threerhfmklssxcptmnlr4hqc4\nxndfqvgxn3five\n974lknineseven\nrlnsix3\n771m1\nxvtjhq7six64threeeightgspmxgv\n4sbqdxbmmzj6fiveone\nonesvvch4rvhmvncnk\nmkzsftp69six6\nfiveptnn7\n94lsgsjxrrghxxsr4\n1grnvgpeightjthqmrfnszpfhfninefive9mbtf\nqtsdfour2\n5mfhmskpcvqbxjzzxt4lq3sevenkv\nrbhjk1cdzjhtzkcbtvmfm\nnine4eightpmrptkb\nbfiveeight1lxzkzvbtkkgxxs38\nmxcgbjqvhd1sevensevenrgp7two\nfourxrdzzmjfmtr62one\nsevenppqtlhvtwo7phlrbssxb\ndhbnjmxg3bsgbhmlfiveseventwo\ntwoonemrbftgtzeightqjmjctmq55\nggk2lt586dfzqbjsvj1one\njtgpzjjtwo86seventwo\n37nine4onebqvsnmvg277\nhmpnzmqsfour6\nxzfhgzllmcbc56vpbpbbjffmgr3jrc\n5lclone\nhjbvkdtmrgvpfive9sevenfive1nlzqlkfrg\nhtwonetgxvjdkrvjsfjjbfmcthseven29\nsix89bdlssd\n3eight6one\nvtbsix2twolzrhfr1\nvhdcvtj5\n167nsnmgxhtvn54fivedcbgrhm\n4three1five82four\n15eightonethreesixthree\ndvhtsccljt51\npbnfrxblk3sevenxjcmcvhlgrghpbgdnpl8xsr3fiveoneightq\n242three8\n2fivehgqfxgl8kpdknxhmk5bmmsbz\nfivejvjeight6fsqgtpvcb\n1threelgkbhlhhlmrbvxqqgf\nklmqfgfg1gnine253psn8\n47eight\neight83mvdtsqppjhgjnsvngfive\n7mcmzvsv6seven\n56seven98three4three\npfnbthreegthreefknjm4five\n2nqgrdcshfpjfpqdrvnq1twoccpmxpxvv\nxtwo7threemxbtpsvjkgrfivethree2\n9pkdfourfour1zjvczkhpbj\n1three2\npkkbphkgqfivellrnvnkdxpql3\nppc62\none73ptfxsbbpqqgctdjhzjsjc91\nnine7threefourvvk\nsix59542xcxqcbnrvzfbshcxxddz2\nftsfj2ninesix1hdjsrpkonelklfpltv\nninehmxgkqbmhvtlvdmdtvpeighttqfour1three\nfrbnineeight4168ksmjstpqvzhnn\nrgnrntwohvqhgxxfkonefour4mfdr5ftgtjjv\n3ninejbszdvdgznfourxpcxspqxnthlngkncvnineccq\nthreemjglxtp5cqmtwotwo2seventwonerkl\neightsevensevenlmbjzprggthree1eight\n57nineninezdcf\ncqoneighteightjnrfkplvninefivemck18mnhszhkv4\ntbvdcsjsvmxtshv3fourseven4kmxvvfour9\nbxcsix19six8dnqsbx\n7five81ncchkdk\nfour4ck7rtjmjpccpeightone\nfivetwo6nine1tdczktmfninelrbnnine\nonetwo9twoeight5sevensix\ncvvtbmninebneightsix1dnnfkgmnm\nh7three3\ntpnzsdm9sixtg5sixqvcqsq3\n1sevenzmbcpgtfrjvq\nr8757\nfournineseven6fourfour\n798dpbrkfourtwoxdrgqkrkmfeight7\nthreebvqqjcldjx4nine5\n3hbl\ntwodndcfddkvfivermvkrfzsnqthree5\nmhdcvsixmnqlvmvxmxfour3ct\n25dpfsrbcllhtwothree2pthreezfhjx\ndcfggnine1onetwoone\nvtbmbpgffive2hdmzjzqqqc4one\nzg11\ntxrknhvhbv183\ndlvscqszz82nvtpb7tktvtgjbml\ntwofour5sevensmqfjrjcndmvcvqdfsrsix\n446sixeight6rbrltdzf\n132ncq1\n4ninezdfzgvzf4four7qkzstcq\n7rx5xntgxfpmvsevenzmzmbjlc3fivefive\nthreeseven7tshthree\ngnbqhninecjnhlpcfivenine18\ngjntwonenllmzgqsvq36lc45fourdrtzlctr\n3tqgbfrk\nzldl3zxpfbpveight\n2ninetgppcvqrq\n7one1sixeighttxcnhltwooneeight\nbsm3hslqcr8xslndqnnvfpzvprlkt\nkhvptwo7kkbznndpqsevensevenvlr\nsevenscneight8one4qnkc\n2v\n2threerjnineonev\n68qhknonebtxvmqh\n3btb\nkcxbqzbjqt3twofourfxdlprsxkzlmflbveight\n9bmdcninecjdv7\nceightwoninelkbbfxgsv9fb5n\nztwo2\n7four9cpkclqxtrmpdgzxgtwo\n8dghrmgprdjeight8knnb852one\n2three36eightfournone2\n6ztwofkzlhvjdrxtsmlbgczf\nknine6ninebpmzjbkg9tttkhtgcklbfive\nsevenv3\n411one4483\n88jvjggxqfour3zrbvbxjzmthree\nfivelqcnqfvgp18t\nfivejceightqlsdrmrnbzfbjskstzrllxrdlcxpjkvf1\n832\nsixfive77rhkjdhvbpdfjxpkmfdq66qqtfpfs\nfv6svkbnsgtpznblnvkvk5\nsixsevenfoursixeight486\ngsbfrjpngshpmlxf2\ngbmmmvdhffbbcq3\n5fivehxx28" <> ...}
```

```elixir
# The newly-improved calibration document consists of lines of text; 
# each line originally contained a specific calibration value that the Elves now need to recover. 
# On each line, the calibration value can be found by combining the first digit and the last digit
#  (in that order) to form a single two-digit number.

defmodule Day1Part2 do
  @number_map [
    {"one", "1"},
    {"two", "2"},
    {"three", "3"},
    {"four", "4"},
    {"five", "5"},
    {"six", "6"},
    {"seven", "7"},
    {"eight", "8"},
    {"nine", "9"}
  ]

  def run(input) do
    input
    |> String.split("\n")
    |> Enum.map(&extract_digits/1)
    |> Enum.map(&pick_first_and_last/1)
    |> Enum.sum()
  end

  defp extract_digits(<<>>), do: <<>>

  defp extract_digits(<<char, rest::binary>>) when char in ?1..?9 do
    <<char>> <> extract_digits(rest)
  end

  for {str, char} <- @number_map do
    defp extract_digits(<<unquote(str), rest::binary>>) do
      unquote(char) <> extract_digits(String.last(unquote(str)) <> rest)
    end
  end

  defp extract_digits(<<_char, rest::binary>>), do: extract_digits(rest)

  defp pick_first_and_last(str) do
    first = String.first(str)
    last = String.last(str)
    String.to_integer(first <> last)
  end
end

Day1Part2.run(puzzle_input2)
```

<!-- livebook:{"output":true} -->

```
53866
```
